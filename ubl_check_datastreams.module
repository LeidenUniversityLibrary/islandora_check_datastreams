<?php

/**
 * @file
 * ubl_check_datastreams
 */

// Permissions.
define('UBL_CHECK_DATASTREAMS_GENERATE', 'Generate missing datastreams');
define('UBL_CHECK_DATASTREAMS_CHILDREN', 'Check children of an object');

/**
 * Implements hook_menu().
 */
function ubl_check_datastreams_menu() {
  return array(
    'admin/islandora/ubl_check_datastreams/object/%/datastream/%/generate' => array(
      'title' => 'Generate missing datastream',
      'type' => MENU_CALLBACK,
      'page callback' => 'drupal_get_form',
      'page arguments' => array('ubl_check_datastreams_generate_form', 4, 6),
      'file' => 'includes/ubl_check_datastreams.form.inc',
      'access arguments' => array(UBL_CHECK_DATASTREAMS_GENERATE),
    ),
    'admin/islandora/ubl_check_datastreams/check_children' => array(
      'title' => 'Check children of an object or batch',
      'type' => MENU_SUGGESTED_ITEM,
      'page callback' => 'drupal_get_form',
      'page arguments' => array('ubl_check_datastreams_children_form'),
      'file' => 'includes/ubl_check_datastreams.form.inc',
      'access arguments' => array(UBL_CHECK_DATASTREAMS_CHILDREN),
    ),
    'admin/islandora/ubl_check_datastreams/check_children/%/%' => array(
      'title' => 'Check children of an object or batch',
      'type' => MENU_CALLBACK,
      'page callback' => 'drupal_get_form',
      'page arguments' => array('ubl_check_datastreams_children_form', 4, 5),
      'file' => 'includes/ubl_check_datastreams.form.inc',
      'access arguments' => array(UBL_CHECK_DATASTREAMS_CHILDREN),
    ),
    'islandora_batch/reports/queue/%islandora_batch_set/check_datastreams' => array(
      'title' => 'Check datastreams of batch',
      'type' => MENU_LOCAL_ACTION,
      'page callback' => 'drupal_get_form',
      'page arguments' => array(
        'ubl_check_datastreams_children_form',
        3,
        'batch',
      ),
      'file' => 'includes/ubl_check_datastreams.form.inc',
      'access arguments' => array(UBL_CHECK_DATASTREAMS_CHILDREN),
    ),
    'admin/reports/islandora_batch_queue/%islandora_batch_set/check_datastreams' => array(
      'title' => 'Check datastreams of batch',
      'type' => MENU_LOCAL_ACTION,
      'page callback' => 'drupal_get_form',
      'page arguments' => array(
        'ubl_check_datastreams_children_form',
        3,
        'batch',
      ),
      'file' => 'includes/ubl_check_datastreams.form.inc',
      'access arguments' => array(UBL_CHECK_DATASTREAMS_CHILDREN),
    ),
  );
}

/**
 * Implements hook_permission().
 */
function ubl_check_datastreams_permission() {
  return array(
    UBL_CHECK_DATASTREAMS_GENERATE => array(
      'title' => t('Generate missing datastreams'),
      'description' => t('Generate missing datastreams'),
    ),
    UBL_CHECK_DATASTREAMS_CHILDREN => array(
      'title' => t('Check children of an object'),
      'description' => t('Check children of an object'),
    ),
  );
}

/**
 * Implements hook_theme_registry_alter().
 */
function ubl_check_datastreams_theme_registry_alter(&$theme_registry) {
  $module_path = drupal_get_path('module', 'ubl_check_datastreams');
  $templatepath = $module_path . '/theme';
  $theme_registry['islandora_default_edit']['template'] = 'ubl-object-edit';
  $theme_registry['islandora_default_edit']['path'] = $templatepath;
}

/**
 * Implements hook_preprocess_theme().
 */
function ubl_check_datastreams_preprocess_islandora_default_edit(array &$variables) {
  $islandora_object = $variables['islandora_object'];

  $rows = array();

  $info = ubl_check_datastreams_datastream_property_info($islandora_object, TRUE);
  foreach ($info as $dsid => $dsinfo) {
    if (!$dsinfo['isavailable']) {
      $row = array();
      $row[] = array(
        'class' => 'datastream-id',
        'data' => $dsid,
      );
      $row[] = array(
        'class' => 'datastream-required',
        'data' => $dsinfo['isrequired'] ? t('required') : t('optional'),
      );
      $row[] = array(
        'class' => 'datastream-remarks',
        'data' => $dsinfo['isrequired'] ? t('Missing required datastream') : t('-'),
      );
      $row[] = array(
        'class' => 'datastream-operations',
        'data' => ($dsinfo['isgeneratable'] && isset($dsinfo['generatelink'])) ? $dsinfo['generatelink'] : '',
      );
      $rows[] = $row;
    }
  }

  if (count($rows) > 0) {
    $header = array();
    $header[] = array('data' => t('ID'));
    $header[] = array('data' => t('Required'));
    $header[] = array('data' => t('Remarks'));
    $header[] = array('data' => t('Operations'));

    $caption = t('Missing datastreams and properties');
    $table = array(
      'colgroups' => NULL,
      'sticky' => TRUE,
      'empty' => 'Error loading datastreams',
      'caption' => $caption,
      'header' => $header,
      'rows' => $rows,
      'attributes' => array('class' => array('check-datastreams')),
    );
    $variables['check_ds_table'] = $table;
  }

  if (in_array('islandora:bookCModel', $islandora_object->models)) {
    $variables['check_ds_children'] = l(t('Check the pages of this book'), 'admin/islandora/ubl_check_datastreams/check_children/' . $islandora_object->id . '/' . 'book');
  }
  elseif (in_array('islandora:collectionCModel', $islandora_object->models)) {
    $variables['check_ds_children'] = l(t('Check the items of this collection'), 'admin/islandora/ubl_check_datastreams/check_children/' . $islandora_object->id . '/' . 'collection');
  }
  elseif (in_array('islandora:compoundCModel', $islandora_object->models)) {
    $variables['check_ds_children'] = l(t('Check the items of this compound'), 'admin/islandora/ubl_check_datastreams/check_children/' . $islandora_object->id . '/' . 'compound');
  }
}

/**
 * Helper function to get the info about the properties of a datastream.
 */
function ubl_check_datastreams_datastream_property_info($object, $includelink = FALSE) {
  static $generatable = NULL;
  if (is_null($generatable)) {
    if (module_load_include('inc', 'islandora_large_image', 'includes/derivatives') !== FALSE) {
      $generatable[] = 'JP2';
      $generatable[] = 'JPG';
      $generatable[] = 'TN';
    }
    if (module_load_include('inc', 'islandora_pdf', 'includes/derivatives') !== FALSE) {
      $generatable[] = 'PDF';
    }
    if (module_load_include('inc', 'islandora_ocr', 'includes/derivatives') !== FALSE) {
      $generatable[] = 'OCR';
      $generatable[] = 'HOCR';
    }
    if (module_load_include('inc', 'islandora_handle', 'includes/handle') !== FALSE) {
      $generatable[] = 'HDL';
    }
    if (module_load_include('inc', 'islandora_paged_content', 'includes/utilities') !== FALSE) {
      $generatable[] = 'DIMENSIONS';
    }
  }

  $models = $object->models;
  $dsreqs = islandora_get_datastreams_requirements_from_models($models);
  $results = array();
  foreach ($dsreqs as $dsid => $dsreq) {
    $results[$dsid]['isavailable'] = isset($object[$dsid]);
    $results[$dsid]['isrequired'] = !(isset($dsreq['optional']) && $dsreq['optional']);
    $results[$dsid]['isgeneratable'] = in_array($dsid, $generatable);
    if ($includelink) {
      $results[$dsid]['generatelink'] = ubl_check_datastreams_generate_link($object, $dsid);
    }
  }
  if (module_load_include('inc', 'islandora_handle', 'includes/handle') !== FALSE) {
    $handle_results = islandora_handle_retrieve_configurations_by_cmodels($object->models);
    $results['HDL']['isavailable'] = islandora_handle_query_for_handle($object);
    $results['HDL']['isrequired'] = (count($handle_results) > 0);
    if ($includelink) {
      $results['HDL']['isgeneratable'] = TRUE;
      $results['HDL']['generatelink'] = ubl_check_datastreams_generate_link($object, 'HDL');
    }
  }
  if (in_array('islandora:pageCModel', $object->models)) {
    if (module_load_include('inc', 'islandora_paged_content', 'includes/utilities') !== FALSE) {
      $hasjp2 = isset($object['JP2']);
      $isavailable = $hasjp2 && $object['JP2']->relationships->get(ISLANDORA_RELS_EXT_URI, 'width');
      $results['DIMENSIONS']['isavailable'] = $isavailable;
      $results['DIMENSIONS']['isrequired'] = TRUE;
      if ($includelink) {
        $results['DIMENSIONS']['isgeneratable'] = TRUE;
        $results['DIMENSIONS']['generatelink'] = ubl_check_datastreams_generate_link($object, 'DIMENSIONS');
      }
    }
  }
  return $results;
}

/**
 * Helper function for generating a link for regeneration of a datastream.
 */
function ubl_check_datastreams_generate_link($object, $dsid) {
  $url = '';
  $options = array();

  $cangenerate = FALSE;
  if ($dsid === 'PDF') {
    if (in_array('islandora:bookCModel', $object->models)) {
      $url = 'islandora/object/' . $object->id . '/manage/book';
    }
  }
  elseif ($dsid === 'TN') {
    $cangenerate = TRUE;
  }
  elseif ($dsid === 'JP2') {
    $cangenerate = TRUE;
  }
  elseif ($dsid === 'JPG') {
    $cangenerate = TRUE;
  }
  elseif ($dsid === 'OCR') {
    if (in_array('islandora:bookCModel', $object->models)) {
      $url = 'islandora/object/' . $object->id . '/manage/book';
    }
    else {
      $cangenerate = TRUE;
    }
  }
  elseif ($dsid === 'HOCR') {
    if (in_array('islandora:bookCModel', $object->models)) {
      $url = 'islandora/object/' . $object->id . '/manage/book';
    }
    else {
      $cangenerate = TRUE;
    }
  }
  elseif ($dsid === 'TECHMD') {
    $cangenerate = TRUE;
  }
  elseif ($dsid === 'HDL') {
    $cangenerate = TRUE;
  }
  elseif ($dsid === 'DIMENSIONS') {
    $cangenerate = TRUE;
  }

  if (!$url && $cangenerate) {
    $url = 'admin/islandora/ubl_check_datastreams/object/' . $object->id . '/datastream/' . $dsid . '/generate';
  }

  if ($url) {
    return l(t('generate'), $url, $options);
  }
  return '';
}
